




















// This file was automatically generated by the PetaPoco T4 Template
// Do not make changes directly to this file - edit the template instead
// 
// The following connection settings were used to generate this file
// 
//     Connection String Name: `HWAdmin`
//     Provider:               `System.Data.SqlClient`
//     Connection String:      `Data Source=.;Initial Catalog=HWAdmin.Web;User ID=sa;Password=sa123456`
//     Schema:                 ``
//     Include Views:          `False`



using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using PetaPoco;

namespace HWAdmin
{

	public partial class HWAdminDB : Database
	{
		public HWAdminDB() 
			: base("HWAdmin")
		{
			CommonConstruct();
		}

		public HWAdminDB(string connectionStringName) 
			: base(connectionStringName)
		{
			CommonConstruct();
		}
		
		partial void CommonConstruct();
		
		public interface IFactory
		{
			HWAdminDB GetInstance();
		}
		
		public static IFactory Factory { get; set; }
        public static HWAdminDB GetInstance()
        {
			if (_instance!=null)
				return _instance;
				
			if (Factory!=null)
				return Factory.GetInstance();
			else
				return new HWAdminDB();
        }

		[ThreadStatic] static HWAdminDB _instance;
		
		public override void OnBeginTransaction()
		{
			if (_instance==null)
				_instance=this;
		}
		
		public override void OnEndTransaction()
		{
			if (_instance==this)
				_instance=null;
		}
        

		public class Record<T> where T:new()
		{
			public static HWAdminDB repo { get { return HWAdminDB.GetInstance(); } }
			public bool IsNew() { return repo.IsNew(this); }
			public object Insert() { return repo.Insert(this); }

			public void Save() { repo.Save(this); }
			public int Update() { return repo.Update(this); }

			public int Update(IEnumerable<string> columns) { return repo.Update(this, columns); }
			public static int Update(string sql, params object[] args) { return repo.Update<T>(sql, args); }
			public static int Update(Sql sql) { return repo.Update<T>(sql); }
			public int Delete() { return repo.Delete(this); }
			public static int Delete(string sql, params object[] args) { return repo.Delete<T>(sql, args); }
			public static int Delete(Sql sql) { return repo.Delete<T>(sql); }
			public static int Delete(object primaryKey) { return repo.Delete<T>(primaryKey); }
			public static bool Exists(object primaryKey) { return repo.Exists<T>(primaryKey); }
			public static bool Exists(string sql, params object[] args) { return repo.Exists<T>(sql, args); }
			public static T SingleOrDefault(object primaryKey) { return repo.SingleOrDefault<T>(primaryKey); }
			public static T SingleOrDefault(string sql, params object[] args) { return repo.SingleOrDefault<T>(sql, args); }
			public static T SingleOrDefault(Sql sql) { return repo.SingleOrDefault<T>(sql); }
			public static T FirstOrDefault(string sql, params object[] args) { return repo.FirstOrDefault<T>(sql, args); }
			public static T FirstOrDefault(Sql sql) { return repo.FirstOrDefault<T>(sql); }
			public static T Single(object primaryKey) { return repo.Single<T>(primaryKey); }
			public static T Single(string sql, params object[] args) { return repo.Single<T>(sql, args); }
			public static T Single(Sql sql) { return repo.Single<T>(sql); }
			public static T First(string sql, params object[] args) { return repo.First<T>(sql, args); }
			public static T First(Sql sql) { return repo.First<T>(sql); }
			public static List<T> Fetch(string sql, params object[] args) { return repo.Fetch<T>(sql, args); }
			public static List<T> Fetch(Sql sql) { return repo.Fetch<T>(sql); }
			public static List<T> Fetch(long page, long itemsPerPage, string sql, params object[] args) { return repo.Fetch<T>(page, itemsPerPage, sql, args); }
			public static List<T> Fetch(long page, long itemsPerPage, Sql sql) { return repo.Fetch<T>(page, itemsPerPage, sql); }
			public static List<T> SkipTake(long skip, long take, string sql, params object[] args) { return repo.SkipTake<T>(skip, take, sql, args); }
			public static List<T> SkipTake(long skip, long take, Sql sql) { return repo.SkipTake<T>(skip, take, sql); }
			public static Page<T> Page(long page, long itemsPerPage, string sql, params object[] args) { return repo.Page<T>(page, itemsPerPage, sql, args); }
			public static Page<T> Page(long page, long itemsPerPage, Sql sql) { return repo.Page<T>(page, itemsPerPage, sql); }
			public static IEnumerable<T> Query(string sql, params object[] args) { return repo.Query<T>(sql, args); }
			public static IEnumerable<T> Query(Sql sql) { return repo.Query<T>(sql); }

		}

	}
	



    

	[TableName("dbo.__MigrationHistory")]



	[PrimaryKey("MigrationId", AutoIncrement=false)]


	[ExplicitColumns]

    public partial class __MigrationHistory : HWAdminDB.Record<__MigrationHistory>  
    {


		[Column] 
		public string MigrationId { get; set; }


		[Column] 
		public string ContextKey { get; set; }


		[Column] 
		public byte[] Model { get; set; }


		[Column] 
		public string ProductVersion { get; set; }
}
    

	[TableName("dbo.Accounts")]



	[PrimaryKey("Id", AutoIncrement=false)]


	[ExplicitColumns]

    public partial class Account : HWAdminDB.Record<Account>  
    {


		[Column] 
		public string Id { get; set; }


		[Column] 
		public string AccountName { get; set; }


		[Column] 
		public string Password { get; set; }


		[Column] 
		public DateTime? CreateDate { get; set; }


		[Column] 
		public DateTime? UpdateDate { get; set; }


		[Column] 
		public string CreateUser_Id { get; set; }


		[Column] 
		public string UpdateUser_Id { get; set; }


		[Column] 
		public int DeleteFlg { get; set; }


		[Column] 
		public string Description { get; set; }
}
    

	[TableName("dbo.ActionAuths")]



	[PrimaryKey("Id", AutoIncrement=false)]


	[ExplicitColumns]

    public partial class ActionAuth : HWAdminDB.Record<ActionAuth>  
    {


		[Column] 
		public string Id { get; set; }


		[Column] 
		public string Name { get; set; }


		[Column] 
		public string Url { get; set; }


		[Column] 
		public DateTime? CreateDate { get; set; }


		[Column] 
		public DateTime? UpdateDate { get; set; }


		[Column] 
		public string CreateUser_Id { get; set; }


		[Column] 
		public string UpdateUser_Id { get; set; }


		[Column] 
		public int DeleteFlg { get; set; }


		[Column] 
		public string Description { get; set; }


		[Column] 
		public string Authority_Id { get; set; }
}
    

	[TableName("dbo.Authorities")]



	[PrimaryKey("Id", AutoIncrement=false)]


	[ExplicitColumns]

    public partial class Authority : HWAdminDB.Record<Authority>  
    {


		[Column] 
		public string Id { get; set; }


		[Column] 
		public string Auth_Id { get; set; }


		[Column] 
		public int AuthType { get; set; }


		[Column] 
		public DateTime? CreateDate { get; set; }


		[Column] 
		public DateTime? UpdateDate { get; set; }


		[Column] 
		public string CreateUser_Id { get; set; }


		[Column] 
		public string UpdateUser_Id { get; set; }


		[Column] 
		public int DeleteFlg { get; set; }


		[Column] 
		public string Description { get; set; }
}
    

	[TableName("dbo.AuthorityAccounts")]



	[PrimaryKey("Authority_Id", AutoIncrement=false)]


	[ExplicitColumns]

    public partial class AuthorityAccount : HWAdminDB.Record<AuthorityAccount>  
    {


		[Column] 
		public string Authority_Id { get; set; }


		[Column] 
		public string Account_Id { get; set; }
}
    

	[TableName("dbo.FileAuths")]



	[PrimaryKey("Id", AutoIncrement=false)]


	[ExplicitColumns]

    public partial class FileAuth : HWAdminDB.Record<FileAuth>  
    {


		[Column] 
		public string Id { get; set; }


		[Column] 
		public string FileName { get; set; }


		[Column] 
		public string FilePath { get; set; }


		[Column] 
		public string FileType { get; set; }


		[Column] 
		public string FileSaveName { get; set; }


		[Column] 
		public DateTime? CreateDate { get; set; }


		[Column] 
		public DateTime? UpdateDate { get; set; }


		[Column] 
		public string CreateUser_Id { get; set; }


		[Column] 
		public string UpdateUser_Id { get; set; }


		[Column] 
		public int DeleteFlg { get; set; }


		[Column] 
		public string Description { get; set; }


		[Column] 
		public string Authority_Id { get; set; }
}
    

	[TableName("dbo.GroupAccounts")]



	[PrimaryKey("Group_Id", AutoIncrement=false)]


	[ExplicitColumns]

    public partial class GroupAccount : HWAdminDB.Record<GroupAccount>  
    {


		[Column] 
		public string Group_Id { get; set; }


		[Column] 
		public string Account_Id { get; set; }
}
    

	[TableName("dbo.GroupRoles")]



	[PrimaryKey("Group_Id", AutoIncrement=false)]


	[ExplicitColumns]

    public partial class GroupRole : HWAdminDB.Record<GroupRole>  
    {


		[Column] 
		public string Group_Id { get; set; }


		[Column] 
		public string Role_Id { get; set; }
}
    

	[TableName("dbo.Groups")]



	[PrimaryKey("Id", AutoIncrement=false)]


	[ExplicitColumns]

    public partial class Group : HWAdminDB.Record<Group>  
    {


		[Column] 
		public string Id { get; set; }


		[Column] 
		public string Name { get; set; }


		[Column] 
		public DateTime? CreateDate { get; set; }


		[Column] 
		public DateTime? UpdateDate { get; set; }


		[Column] 
		public string CreateUser_Id { get; set; }


		[Column] 
		public string UpdateUser_Id { get; set; }


		[Column] 
		public int DeleteFlg { get; set; }


		[Column] 
		public string Description { get; set; }


		[Column] 
		public string Parent_Id { get; set; }
}
    

	[TableName("dbo.Menus")]



	[PrimaryKey("Id", AutoIncrement=false)]


	[ExplicitColumns]

    public partial class Menu : HWAdminDB.Record<Menu>  
    {


		[Column] 
		public string Id { get; set; }


		[Column] 
		public string Name { get; set; }


		[Column] 
		public string Url { get; set; }


		[Column] 
		public DateTime? CreateDate { get; set; }


		[Column] 
		public DateTime? UpdateDate { get; set; }


		[Column] 
		public string CreateUser_Id { get; set; }


		[Column] 
		public string UpdateUser_Id { get; set; }


		[Column] 
		public int DeleteFlg { get; set; }


		[Column] 
		public string Description { get; set; }


		[Column] 
		public string Authority_Id { get; set; }


		[Column] 
		public string Parent_Id { get; set; }
}
    

	[TableName("dbo.PageElements")]



	[PrimaryKey("Id", AutoIncrement=false)]


	[ExplicitColumns]

    public partial class PageElement : HWAdminDB.Record<PageElement>  
    {


		[Column] 
		public string Id { get; set; }


		[Column] 
		public string Name { get; set; }


		[Column] 
		public string Code { get; set; }


		[Column] 
		public DateTime? CreateDate { get; set; }


		[Column] 
		public DateTime? UpdateDate { get; set; }


		[Column] 
		public string CreateUser_Id { get; set; }


		[Column] 
		public string UpdateUser_Id { get; set; }


		[Column] 
		public int DeleteFlg { get; set; }


		[Column] 
		public string Description { get; set; }


		[Column] 
		public string Authority_Id { get; set; }
}
    

	[TableName("dbo.RoleAccounts")]



	[PrimaryKey("Role_Id", AutoIncrement=false)]


	[ExplicitColumns]

    public partial class RoleAccount : HWAdminDB.Record<RoleAccount>  
    {


		[Column] 
		public string Role_Id { get; set; }


		[Column] 
		public string Account_Id { get; set; }
}
    

	[TableName("dbo.RoleAuthorities")]



	[PrimaryKey("Role_Id", AutoIncrement=false)]


	[ExplicitColumns]

    public partial class RoleAuthority : HWAdminDB.Record<RoleAuthority>  
    {


		[Column] 
		public string Role_Id { get; set; }


		[Column] 
		public string Authority_Id { get; set; }
}
    

	[TableName("dbo.Roles")]



	[PrimaryKey("Id", AutoIncrement=false)]


	[ExplicitColumns]

    public partial class Role : HWAdminDB.Record<Role>  
    {


		[Column] 
		public string Id { get; set; }


		[Column] 
		public string Name { get; set; }


		[Column] 
		public DateTime? CreateDate { get; set; }


		[Column] 
		public DateTime? UpdateDate { get; set; }


		[Column] 
		public string CreateUser_Id { get; set; }


		[Column] 
		public string UpdateUser_Id { get; set; }


		[Column] 
		public int DeleteFlg { get; set; }


		[Column] 
		public string Description { get; set; }
}
    

	[TableName("dbo.sysdiagrams")]



	[PrimaryKey("diagram_id")]




	[ExplicitColumns]

    public partial class sysdiagram : HWAdminDB.Record<sysdiagram>  
    {


		[Column] 
		public string name { get; set; }


		[Column] 
		public int principal_id { get; set; }


		[Column] 
		public int diagram_id { get; set; }


		[Column] 
		public int? version { get; set; }


		[Column] 
		public byte[] definition { get; set; }
}
}
